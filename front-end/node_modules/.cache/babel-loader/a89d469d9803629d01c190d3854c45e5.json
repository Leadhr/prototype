{"ast":null,"code":"var _jsxFileName = \"/home/hunter/dev/leadhr/prototype/front-end/src/components/AnswerBox/AnswerBox.js\";\nimport React, { useEffect, useState } from \"react\";\nimport Answer from \"../Answer/Answer\";\n\nfunction AnswerBox(props) {\n  const [show, setShow] = useState([true, true, true]); //reset show on new question\n\n  useEffect(() => {\n    setShow([true, true, true]);\n  }, [props.currentQuestion]);\n\n  function handleShow(bool, index) {\n    const showArray = show.slice();\n    showArray[index] = bool;\n    setShow(showArray);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, //instead of writing all of this 3 times for 3 answer elements, i just made an array [0,1,2] and mapped over it to return 3 elements\n  //using the element to access the proper answer\n  [0, 1, 2].map(element => {\n    if (show[element]) {\n      return /*#__PURE__*/React.createElement(Answer, {\n        key: element,\n        show: show[element],\n        setShow: handleShow,\n        answer: props.answers[element],\n        responseBank: props.responseBank,\n        setResponseBank: props.setResponseBank,\n        currentQuestion: props.currentQuestion,\n        setCurrentQuestion: props.setCurrentQuestion,\n        currentStage: props.currentStage,\n        setCurrentStage: props.setCurrentStage,\n        complete: props.complete,\n        setComplete: props.setComplete,\n        submitResponse: props.submitResponse,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 15\n        }\n      });\n    }\n  }));\n}\n\nexport default AnswerBox;","map":{"version":3,"sources":["/home/hunter/dev/leadhr/prototype/front-end/src/components/AnswerBox/AnswerBox.js"],"names":["React","useEffect","useState","Answer","AnswerBox","props","show","setShow","currentQuestion","handleShow","bool","index","showArray","slice","map","element","answers","responseBank","setResponseBank","setCurrentQuestion","currentStage","setCurrentStage","complete","setComplete","submitResponse"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,kBAAnB;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AACxB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,CAAD,CAAhC,CADwB,CAExB;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,OAAO,CAAC,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,CAAD,CAAP;AACD,GAFQ,EAEN,CAACF,KAAK,CAACG,eAAP,CAFM,CAAT;;AAGA,WAASC,UAAT,CAAoBC,IAApB,EAA0BC,KAA1B,EAAiC;AAC/B,UAAMC,SAAS,GAAGN,IAAI,CAACO,KAAL,EAAlB;AACAD,IAAAA,SAAS,CAACD,KAAD,CAAT,GAAmBD,IAAnB;AACAH,IAAAA,OAAO,CAACK,SAAD,CAAP;AACD;;AACD,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI;AACA;AACA,GAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAUE,GAAV,CAAeC,OAAD,IAAa;AACzB,QAAIT,IAAI,CAACS,OAAD,CAAR,EAAmB;AACjB,0BACE,oBAAC,MAAD;AACE,QAAA,GAAG,EAAEA,OADP;AAEE,QAAA,IAAI,EAAET,IAAI,CAACS,OAAD,CAFZ;AAGE,QAAA,OAAO,EAAEN,UAHX;AAIE,QAAA,MAAM,EAAEJ,KAAK,CAACW,OAAN,CAAcD,OAAd,CAJV;AAKE,QAAA,YAAY,EAAEV,KAAK,CAACY,YALtB;AAME,QAAA,eAAe,EAAEZ,KAAK,CAACa,eANzB;AAOE,QAAA,eAAe,EAAEb,KAAK,CAACG,eAPzB;AAQE,QAAA,kBAAkB,EAAEH,KAAK,CAACc,kBAR5B;AASE,QAAA,YAAY,EAAEd,KAAK,CAACe,YATtB;AAUE,QAAA,eAAe,EAAEf,KAAK,CAACgB,eAVzB;AAWE,QAAA,QAAQ,EAAEhB,KAAK,CAACiB,QAXlB;AAYE,QAAA,WAAW,EAAEjB,KAAK,CAACkB,WAZrB;AAaE,QAAA,cAAc,EAAElB,KAAK,CAACmB,cAbxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAiBD;AACF,GApBD,CAJJ,CADF;AAgCD;;AAED,eAAepB,SAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Answer from \"../Answer/Answer\";\n\nfunction AnswerBox(props) {\n  const [show, setShow] = useState([true, true, true]);\n  //reset show on new question\n  useEffect(() => {\n    setShow([true, true, true]);\n  }, [props.currentQuestion]);\n  function handleShow(bool, index) {\n    const showArray = show.slice();\n    showArray[index] = bool;\n    setShow(showArray);\n  }\n  return (\n    <div>\n      {\n        //instead of writing all of this 3 times for 3 answer elements, i just made an array [0,1,2] and mapped over it to return 3 elements\n        //using the element to access the proper answer\n        [0, 1, 2].map((element) => {\n          if (show[element]) {\n            return (\n              <Answer\n                key={element}\n                show={show[element]}\n                setShow={handleShow}\n                answer={props.answers[element]}\n                responseBank={props.responseBank}\n                setResponseBank={props.setResponseBank}\n                currentQuestion={props.currentQuestion}\n                setCurrentQuestion={props.setCurrentQuestion}\n                currentStage={props.currentStage}\n                setCurrentStage={props.setCurrentStage}\n                complete={props.complete}\n                setComplete={props.setComplete}\n                submitResponse={props.submitResponse}\n              />\n            );\n          }\n        })\n      }\n      {/* <Answer answer={props.answers[0]} />\n          <Answer answer={props.answers[1]} />\n          <Answer answer={props.answers[2]} /> */}\n    </div>\n  );\n}\n\nexport default AnswerBox;\n"]},"metadata":{},"sourceType":"module"}