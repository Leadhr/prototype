{"ast":null,"code":"var _jsxFileName = \"/home/hunter/dev/leadhr/prototype/front-end/src/components/AnswerBox/AnswerBox.js\";\nimport React from \"react\";\nimport Answer from \"../Answer/Answer\";\n\nfunction AnswerBox(props) {\n  function checkElement(element) {\n    return element !== props.responseBank[props.currentQuestion[0]];\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }, //instead of writing all of this 3 times for 3 answer elements, i just made an array [0,1,2] and mapped over it to return 3 elements\n  //using the element to access the proper answer\n  [0, 1, 2].map(element => {\n    //if element hasnt been selected, render it\n    if (checkElement(element)) {\n      return /*#__PURE__*/React.createElement(Answer, {\n        key: element,\n        answer: props.answers[element],\n        responseBank: props.responseBank,\n        setResponseBank: props.setResponseBank,\n        currentQuestion: props.currentQuestion,\n        setCurrentQuestion: props.setCurrentQuestion,\n        currentStage: props.currentStage,\n        setCurrentStage: props.setCurrentStage,\n        complete: props.complete,\n        setComplete: props.setComplete,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 17\n        }\n      });\n    }\n  }));\n}\n\nexport default AnswerBox;","map":{"version":3,"sources":["/home/hunter/dev/leadhr/prototype/front-end/src/components/AnswerBox/AnswerBox.js"],"names":["React","Answer","AnswerBox","props","checkElement","element","responseBank","currentQuestion","map","answers","setResponseBank","setCurrentQuestion","currentStage","setCurrentStage","complete","setComplete"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AACtB,WAASC,YAAT,CAAsBC,OAAtB,EAA+B;AAC3B,WAAQA,OAAO,KAAKF,KAAK,CAACG,YAAN,CAAmBH,KAAK,CAACI,eAAN,CAAsB,CAAtB,CAAnB,CAApB;AACH;;AACH,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI;AACA;AACA,GAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAUC,GAAV,CAAeH,OAAD,IAAa;AACzB;AACA,QAAID,YAAY,CAACC,OAAD,CAAhB,EAA2B;AACzB,0BACI,oBAAC,MAAD;AACE,QAAA,GAAG,EAAEA,OADP;AAEE,QAAA,MAAM,EAAEF,KAAK,CAACM,OAAN,CAAcJ,OAAd,CAFV;AAGE,QAAA,YAAY,EAAEF,KAAK,CAACG,YAHtB;AAIE,QAAA,eAAe,EAAEH,KAAK,CAACO,eAJzB;AAKE,QAAA,eAAe,EAAEP,KAAK,CAACI,eALzB;AAME,QAAA,kBAAkB,EAAEJ,KAAK,CAACQ,kBAN5B;AAOE,QAAA,YAAY,EAAER,KAAK,CAACS,YAPtB;AAQE,QAAA,eAAe,EAAET,KAAK,CAACU,eARzB;AASE,QAAA,QAAQ,EAAEV,KAAK,CAACW,QATlB;AAUE,QAAA,WAAW,EAAEX,KAAK,CAACY,WAVrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAcD;AAEF,GAnBD,CAJJ,CADF;AA+BD;;AAED,eAAeb,SAAf","sourcesContent":["import React from \"react\";\nimport Answer from \"../Answer/Answer\";\n\nfunction AnswerBox(props) {\n    function checkElement(element) {\n        return (element !== props.responseBank[props.currentQuestion[0]]);\n    }\n  return (\n    <div>\n      {\n        //instead of writing all of this 3 times for 3 answer elements, i just made an array [0,1,2] and mapped over it to return 3 elements\n        //using the element to access the proper answer\n        [0, 1, 2].map((element) => {\n          //if element hasnt been selected, render it\n          if (checkElement(element)) {\n            return (\n                <Answer\n                  key={element}\n                  answer={props.answers[element]}\n                  responseBank={props.responseBank}\n                  setResponseBank={props.setResponseBank}\n                  currentQuestion={props.currentQuestion}\n                  setCurrentQuestion={props.setCurrentQuestion}\n                  currentStage={props.currentStage}\n                  setCurrentStage={props.setCurrentStage}\n                  complete={props.complete}\n                  setComplete={props.setComplete}\n                />\n              );\n          }\n          \n        })\n      }\n      {/* <Answer answer={props.answers[0]} />\n          <Answer answer={props.answers[1]} />\n          <Answer answer={props.answers[2]} /> */}\n    </div>\n  );\n}\n\nexport default AnswerBox;\n"]},"metadata":{},"sourceType":"module"}