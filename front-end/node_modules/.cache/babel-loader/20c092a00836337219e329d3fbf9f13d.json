{"ast":null,"code":"var _jsxFileName = \"/home/hunter/dev/leadhr/prototype/front-end/src/components/AnswerBox/AnswerBox.js\";\nimport React from \"react\";\nimport Answer from \"../Answer/Answer\";\n\nfunction AnswerBox(props) {\n  //   function hidden(num) {\n  //     if (\n  //       props.currentStage === 1 &&\n  //       props.responseBank[props.currentQuestion] === props.answers[num][\"answer-id\"]\n  //     ) {\n  //       return true;\n  //     }\n  //     return false\n  //   }\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, //instead of writing all of this 3 times for 3 answer elements, i just made an array [0,1,2] and mapped over it to return 3 elements\n  //using the element to access the proper answer\n  [0, 1, 2].map(element => {\n    return /*#__PURE__*/React.createElement(Answer, {\n      key: element //   hidden={hidden(element)}\n      ,\n      answer: props.answers[element],\n      responseBank: props.responseBank,\n      setResponseBank: props.setResponseBank,\n      currentQuestion: props.currentQuestion,\n      setCurrentQuestion: props.setCurrentQuestion,\n      currentStage: props.currentStage,\n      setCurrentStage: props.setCurrentStage,\n      complete: props.complete,\n      setComplete: props.setComplete,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }\n    });\n  }));\n}\n\nexport default AnswerBox;","map":{"version":3,"sources":["/home/hunter/dev/leadhr/prototype/front-end/src/components/AnswerBox/AnswerBox.js"],"names":["React","Answer","AnswerBox","props","map","element","answers","responseBank","setResponseBank","currentQuestion","setCurrentQuestion","currentStage","setCurrentStage","complete","setComplete"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI;AACA;AACA,GAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAUC,GAAV,CAAeC,OAAD,IAAa;AACzB,wBACE,oBAAC,MAAD;AACE,MAAA,GAAG,EAAEA,OADP,CAEA;AAFA;AAGE,MAAA,MAAM,EAAEF,KAAK,CAACG,OAAN,CAAcD,OAAd,CAHV;AAIE,MAAA,YAAY,EAAEF,KAAK,CAACI,YAJtB;AAKE,MAAA,eAAe,EAAEJ,KAAK,CAACK,eALzB;AAME,MAAA,eAAe,EAAEL,KAAK,CAACM,eANzB;AAOE,MAAA,kBAAkB,EAAEN,KAAK,CAACO,kBAP5B;AAQE,MAAA,YAAY,EAAEP,KAAK,CAACQ,YARtB;AASE,MAAA,eAAe,EAAER,KAAK,CAACS,eATzB;AAUE,MAAA,QAAQ,EAAET,KAAK,CAACU,QAVlB;AAWE,MAAA,WAAW,EAAEV,KAAK,CAACW,WAXrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAeD,GAhBD,CAJJ,CADF;AA4BD;;AAED,eAAeZ,SAAf","sourcesContent":["import React from \"react\";\nimport Answer from \"../Answer/Answer\";\n\nfunction AnswerBox(props) {\n//   function hidden(num) {\n//     if (\n//       props.currentStage === 1 &&\n//       props.responseBank[props.currentQuestion] === props.answers[num][\"answer-id\"]\n//     ) {\n//       return true;\n//     }\n//     return false\n//   }\n  return (\n    <div>\n      {\n        //instead of writing all of this 3 times for 3 answer elements, i just made an array [0,1,2] and mapped over it to return 3 elements\n        //using the element to access the proper answer\n        [0, 1, 2].map((element) => {\n          return (\n            <Answer\n              key={element}\n            //   hidden={hidden(element)}\n              answer={props.answers[element]}\n              responseBank={props.responseBank}\n              setResponseBank={props.setResponseBank}\n              currentQuestion={props.currentQuestion}\n              setCurrentQuestion={props.setCurrentQuestion}\n              currentStage={props.currentStage}\n              setCurrentStage={props.setCurrentStage}\n              complete={props.complete}\n              setComplete={props.setComplete}\n            />\n          );\n        })\n      }\n      {/* <Answer answer={props.answers[0]} />\n          <Answer answer={props.answers[1]} />\n          <Answer answer={props.answers[2]} /> */}\n    </div>\n  );\n}\n\nexport default AnswerBox;\n"]},"metadata":{},"sourceType":"module"}