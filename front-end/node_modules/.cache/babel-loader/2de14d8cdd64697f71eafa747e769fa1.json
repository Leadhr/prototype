{"ast":null,"code":"var _jsxFileName = \"/home/hunter/dev/leadhr/prototype/front-end/src/components/QuizApp/QuizApp.js\";\nimport React, { Component } from \"react\";\nimport \"../../assets/style.css\";\nimport quizService from \"./quizService\";\nimport QuestionBox from \"../QuestionBox/QuestionBox\";\nimport Result from \"../Result/Result\";\n\nclass QuizApp extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      questionBank: [],\n      score: 0,\n      responses: 0\n    };\n\n    this.getQuestions = () => {\n      quizService().then(question => {\n        this.setState({\n          questionBank: question\n        });\n      });\n    };\n\n    this.computeAnswer = (answer, correctAnswer) => {\n      if (answer === correctAnswer) {\n        this.setState({\n          score: this.state.score + 1\n        });\n      }\n\n      this.setState({\n        responses: this.state.responses < 5 ? this.state.responses + 1 : 5\n      });\n    };\n\n    this.playAgain = () => {\n      this.getQuestions();\n      this.setState({\n        score: 0,\n        responses: 0\n      });\n    };\n  }\n\n  //runs when component is rendered\n  componentDidMount() {\n    //initialize state with data\n    this.getQuestions();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    }, \"Quiz App\"), this.state.questionBank.length > 0 && this.state.responses < 5 && // map through the array of question data\n    this.state.questionBank.map( // for each question, return an h4 element with \"question\" as the text\n    ({\n      question,\n      answers,\n      correct,\n      questionId\n    }) => /*#__PURE__*/React.createElement(QuestionBox, {\n      question: question,\n      options: answers,\n      key: questionId,\n      selected: answer => this.computeAnswer(answer, correct),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 29\n      }\n    })), this.state.responses === 5 ? /*#__PURE__*/React.createElement(Result, {\n      score: this.state.score,\n      playAgain: this.playAgain,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 48\n      }\n    }) : null);\n  }\n\n}\n\nexport default QuizApp;","map":{"version":3,"sources":["/home/hunter/dev/leadhr/prototype/front-end/src/components/QuizApp/QuizApp.js"],"names":["React","Component","quizService","QuestionBox","Result","QuizApp","state","questionBank","score","responses","getQuestions","then","question","setState","computeAnswer","answer","correctAnswer","playAgain","componentDidMount","render","length","map","answers","correct","questionId"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,wBAAP;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;;AAEA,MAAMC,OAAN,SAAsBJ,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAC5BK,KAD4B,GACpB;AACJC,MAAAA,YAAY,EAAE,EADV;AAEJC,MAAAA,KAAK,EAAE,CAFH;AAGJC,MAAAA,SAAS,EAAE;AAHP,KADoB;;AAAA,SAO5BC,YAP4B,GAOb,MAAM;AACjBR,MAAAA,WAAW,GAAGS,IAAd,CAAmBC,QAAQ,IAAI;AAC3B,aAAKC,QAAL,CAAc;AACVN,UAAAA,YAAY,EAAEK;AADJ,SAAd;AAGH,OAJD;AAKH,KAb2B;;AAAA,SAc5BE,aAd4B,GAcZ,CAACC,MAAD,EAASC,aAAT,KAA2B;AACvC,UAAID,MAAM,KAAKC,aAAf,EAA8B;AAC1B,aAAKH,QAAL,CAAc;AACVL,UAAAA,KAAK,EAAE,KAAKF,KAAL,CAAWE,KAAX,GAAmB;AADhB,SAAd;AAGH;;AACD,WAAKK,QAAL,CAAc;AACVJ,QAAAA,SAAS,EAAE,KAAKH,KAAL,CAAWG,SAAX,GAAuB,CAAvB,GAA2B,KAAKH,KAAL,CAAWG,SAAX,GAAuB,CAAlD,GAAsD;AADvD,OAAd;AAGH,KAvB2B;;AAAA,SAwB5BQ,SAxB4B,GAwBhB,MAAM;AACd,WAAKP,YAAL;AACA,WAAKG,QAAL,CAAc;AACVL,QAAAA,KAAK,EAAE,CADG;AAEVC,QAAAA,SAAS,EAAE;AAFD,OAAd;AAIH,KA9B2B;AAAA;;AA+B5B;AACAS,EAAAA,iBAAiB,GAAG;AAChB;AACA,SAAKR,YAAL;AACH;;AACDS,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAGM,KAAKb,KAAL,CAAWC,YAAX,CAAwBa,MAAxB,GAAiC,CAAjC,IACE,KAAKd,KAAL,CAAWG,SAAX,GAAuB,CADzB,IAEE;AACA,SAAKH,KAAL,CAAWC,YAAX,CAAwBc,GAAxB,EACI;AACA,KAAC;AAACT,MAAAA,QAAD;AAAWU,MAAAA,OAAX;AAAoBC,MAAAA,OAApB;AAA6BC,MAAAA;AAA7B,KAAD,kBACI,oBAAC,WAAD;AACI,MAAA,QAAQ,EAAEZ,QADd;AAEI,MAAA,OAAO,EAAEU,OAFb;AAGI,MAAA,GAAG,EAAEE,UAHT;AAII,MAAA,QAAQ,EAAET,MAAM,IAAI,KAAKD,aAAL,CAAmBC,MAAnB,EAA2BQ,OAA3B,CAJxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHR,CANR,EAiBK,KAAKjB,KAAL,CAAWG,SAAX,KAAyB,CAAzB,gBAA8B,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAE,KAAKH,KAAL,CAAWE,KAA1B;AAC3B,MAAA,SAAS,EAAE,KAAKS,SADW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA9B,GACmC,IAlBxC,CADJ;AAsBH;;AA3D2B;;AA8DhC,eAAeZ,OAAf","sourcesContent":["import React, { Component } from \"react\";\nimport \"../../assets/style.css\";\nimport quizService from \"./quizService\";\nimport QuestionBox from \"../QuestionBox/QuestionBox\";\nimport Result from \"../Result/Result\"\n\nclass QuizApp extends Component {\n    state = {\n        questionBank: [],\n        score: 0,\n        responses: 0\n    }\n    //function to fetch data from mock api\n    getQuestions = () => {\n        quizService().then(question => {\n            this.setState({\n                questionBank: question\n            });\n        });\n    };\n    computeAnswer = (answer, correctAnswer) => {\n        if (answer === correctAnswer) {\n            this.setState({\n                score: this.state.score + 1\n            });\n        }\n        this.setState({\n            responses: this.state.responses < 5 ? this.state.responses + 1 : 5\n        })\n    }\n    playAgain = () => {\n        this.getQuestions();\n        this.setState({\n            score: 0,\n            responses: 0\n        })\n    }\n    //runs when component is rendered\n    componentDidMount() {\n        //initialize state with data\n        this.getQuestions();\n    }\n    render() {\n        return (\n            <div className=\"container\">\n                <div className=\"title\">Quiz App</div>\n                {/* if this.state.questionBank is not empty */}\n                { this.state.questionBank.length > 0 && \n                    this.state.responses < 5 &&\n                    // map through the array of question data\n                    this.state.questionBank.map(\n                        // for each question, return an h4 element with \"question\" as the text\n                        ({question, answers, correct, questionId}) => (\n                            <QuestionBox \n                                question={question}\n                                options={answers}\n                                key={questionId}\n                                selected={answer => this.computeAnswer(answer, correct)}\n                            />\n                        )\n                    )}\n                {this.state.responses === 5 ? (<Result score={this.state.score} \n                    playAgain={this.playAgain}/>) : null}\n            </div>\n        )\n    }\n}\n\nexport default QuizApp;"]},"metadata":{},"sourceType":"module"}