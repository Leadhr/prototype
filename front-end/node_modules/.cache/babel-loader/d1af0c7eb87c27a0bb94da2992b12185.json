{"ast":null,"code":"var _jsxFileName = \"/home/hunter/dev/leadhr/prototype/front-end/src/components/AnswerBox/AnswerBox.js\";\nimport React from \"react\";\nimport Answer from \"../Answer/Answer\";\n\nfunction AnswerBox(props) {\n  function checkElement(element) {\n    return element !== props.responseBank[props.currentQuestion[0]];\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }, //instead of writing all of this 3 times for 3 answer elements, i just made an array [0,1,2] and mapped over it to return 3 elements\n  //using the element to access the proper answer\n  [0, 1, 2].map(element => {\n    //if element hasnt been selected, render it\n    if (element !== props.responseBank[props.currentQuestion[0]]) {}\n  }));\n}\n\nexport default AnswerBox;","map":{"version":3,"sources":["/home/hunter/dev/leadhr/prototype/front-end/src/components/AnswerBox/AnswerBox.js"],"names":["React","Answer","AnswerBox","props","checkElement","element","responseBank","currentQuestion","map"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AACxB,WAASC,YAAT,CAAsBC,OAAtB,EAA+B;AAC7B,WAAOA,OAAO,KAAKF,KAAK,CAACG,YAAN,CAAmBH,KAAK,CAACI,eAAN,CAAsB,CAAtB,CAAnB,CAAnB;AACD;;AACD,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI;AACA;AACA,GAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAUC,GAAV,CAAeH,OAAD,IAAa;AACzB;AACA,QAAIA,OAAO,KAAKF,KAAK,CAACG,YAAN,CAAmBH,KAAK,CAACI,eAAN,CAAsB,CAAtB,CAAnB,CAAhB,EAA8D,CAE7D;AAEF,GAND,CAJJ,CADF;AAkBD;;AAED,eAAeL,SAAf","sourcesContent":["import React from \"react\";\nimport Answer from \"../Answer/Answer\";\n\nfunction AnswerBox(props) {\n  function checkElement(element) {\n    return element !== props.responseBank[props.currentQuestion[0]];\n  }\n  return (\n    <div>\n      {\n        //instead of writing all of this 3 times for 3 answer elements, i just made an array [0,1,2] and mapped over it to return 3 elements\n        //using the element to access the proper answer\n        [0, 1, 2].map((element) => {\n          //if element hasnt been selected, render it\n          if (element !== props.responseBank[props.currentQuestion[0]]) {\n\n          }\n          \n        })\n      }\n      {/* <Answer answer={props.answers[0]} />\n          <Answer answer={props.answers[1]} />\n          <Answer answer={props.answers[2]} /> */}\n    </div>\n  );\n}\n\nexport default AnswerBox;\n"]},"metadata":{},"sourceType":"module"}