{"ast":null,"code":"var _jsxFileName = \"/home/hunter/dev/leadhr/prototype/front-end/src/components/Survey/Survey.js\";\nimport React, { useState, useEffect } from \"react\";\nimport SurveyBox from \"../SurveyBox/SurveyBox\";\n\nfunction Survey() {\n  //contains all survey information\n  //format: array with 56 elements\n  //example element\n  //   {\n  //     \"question-id\": 1,\n  //     \"number\": 2,\n  //     \"question\": \"Of these three options, which is most important to you?\",\n  //     \"answers\": [\n  //       {\n  //         \"answer-id\": 1,\n  //         \"text\": \"Choosing my own path\"\n  //       },\n  //       {\n  //         \"answer-id\": 2,\n  //         \"text\": \"Putting others at ease\"\n  //       },\n  //       {\n  //         \"answer-id\": 3,\n  //         \"text\": \"Committing to a solid plan\"\n  //       }\n  //     ]\n  //   }\n  const [questionBank, setQuestionBank] = useState([]);\n  const [responseBank, setResponseBank] = useState(new Array(56).fill([null, null]));\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [currentStage, setCurrentStage] = useState(1);\n  useEffect(() => {\n    fetch(\"/api/questions\").then(res => res.json()).then(data => {\n      setQuestionBank(data);\n    }).catch(console.log);\n  }, []);\n\n  function handleSetResponseBank(response, index) {\n    const newResponseBank = responseBank.slice();\n    newResponseBank[index] = response;\n    setResponseBank(newResponseBank);\n  }\n\n  if (questionBank.length > 0) {\n    return /*#__PURE__*/React.createElement(SurveyBox, {\n      questionBank: questionBank,\n      setQuestionBank: handleSetResponseBank,\n      responseBank: responseBank,\n      setResponseBank: handleSetResponseBank,\n      currentQuestion: currentQuestion,\n      setCurrentQuestion: setCurrentQuestion,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    });\n  } else {\n    return null;\n  }\n}\n\nexport default Survey;","map":{"version":3,"sources":["/home/hunter/dev/leadhr/prototype/front-end/src/components/Survey/Survey.js"],"names":["React","useState","useEffect","SurveyBox","Survey","questionBank","setQuestionBank","responseBank","setResponseBank","Array","fill","currentQuestion","setCurrentQuestion","currentStage","setCurrentStage","fetch","then","res","json","data","catch","console","log","handleSetResponseBank","response","index","newResponseBank","slice","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,wBAAtB;;AAEA,SAASC,MAAT,GAAkB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCL,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACM,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,IAAIQ,KAAJ,CAAU,EAAV,EAAcC,IAAd,CAAmB,CAAC,IAAD,EAAO,IAAP,CAAnB,CAAD,CAAhD;AACA,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCX,QAAQ,CAAC,CAAD,CAAtD;AACA,QAAM,CAACY,YAAD,EAAeC,eAAf,IAAkCb,QAAQ,CAAC,CAAD,CAAhD;AAGAC,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,KAAK,CAAC,gBAAD,CAAL,CACGC,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESG,IAAD,IAAU;AACdb,MAAAA,eAAe,CAACa,IAAD,CAAf;AACD,KAJH,EAKGC,KALH,CAKSC,OAAO,CAACC,GALjB;AAMD,GAPQ,EAON,EAPM,CAAT;;AASA,WAASC,qBAAT,CAA+BC,QAA/B,EAAyCC,KAAzC,EAAgD;AAC5C,UAAMC,eAAe,GAAGnB,YAAY,CAACoB,KAAb,EAAxB;AACAD,IAAAA,eAAe,CAACD,KAAD,CAAf,GAAyBD,QAAzB;AACAhB,IAAAA,eAAe,CAACkB,eAAD,CAAf;AAEH;;AAED,MAAIrB,YAAY,CAACuB,MAAb,GAAsB,CAA1B,EAA6B;AAC3B,wBACI,oBAAC,SAAD;AACE,MAAA,YAAY,EAAEvB,YADhB;AAEE,MAAA,eAAe,EAAEkB,qBAFnB;AAGE,MAAA,YAAY,EAAEhB,YAHhB;AAIE,MAAA,eAAe,EAAEgB,qBAJnB;AAKE,MAAA,eAAe,EAAEZ,eALnB;AAME,MAAA,kBAAkB,EAAEC,kBANtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAUD,GAXD,MAWO;AACH,WAAO,IAAP;AACH;AACF;;AAED,eAAeR,MAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport SurveyBox from \"../SurveyBox/SurveyBox\";\n\nfunction Survey() {\n  //contains all survey information\n  //format: array with 56 elements\n  //example element\n  //   {\n  //     \"question-id\": 1,\n  //     \"number\": 2,\n  //     \"question\": \"Of these three options, which is most important to you?\",\n  //     \"answers\": [\n  //       {\n  //         \"answer-id\": 1,\n  //         \"text\": \"Choosing my own path\"\n  //       },\n  //       {\n  //         \"answer-id\": 2,\n  //         \"text\": \"Putting others at ease\"\n  //       },\n  //       {\n  //         \"answer-id\": 3,\n  //         \"text\": \"Committing to a solid plan\"\n  //       }\n  //     ]\n  //   }\n  const [questionBank, setQuestionBank] = useState([]);\n  const [responseBank, setResponseBank] = useState(new Array(56).fill([null, null]));\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [currentStage, setCurrentStage] = useState(1);\n  \n\n  useEffect(() => {\n    fetch(\"/api/questions\")\n      .then((res) => res.json())\n      .then((data) => {\n        setQuestionBank(data);\n      })\n      .catch(console.log);\n  }, []);\n  \n  function handleSetResponseBank(response, index) {\n      const newResponseBank = responseBank.slice();\n      newResponseBank[index] = response;\n      setResponseBank(newResponseBank)\n\n  }\n\n  if (questionBank.length > 0) {\n    return (\n        <SurveyBox\n          questionBank={questionBank}\n          setQuestionBank={handleSetResponseBank}\n          responseBank={responseBank}\n          setResponseBank={handleSetResponseBank}\n          currentQuestion={currentQuestion}\n          setCurrentQuestion={setCurrentQuestion}\n        />\n      );\n  } else {\n      return null;\n  }\n}\n\nexport default Survey;\n"]},"metadata":{},"sourceType":"module"}