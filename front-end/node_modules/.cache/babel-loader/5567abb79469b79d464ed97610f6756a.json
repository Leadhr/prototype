{"ast":null,"code":"var _jsxFileName = \"/home/hunter/dev/leadhr/prototype/front-end/src/components/Survey/Survey.js\";\nimport React, { useState, useEffect } from \"react\";\nimport SurveyBox from \"../SurveyBox/SurveyBox\";\n\nfunction Survey() {\n  //contains all survey information\n  //format: array with 56 elements\n  //example element\n  //   {\n  //     \"question-id\": 1,\n  //     \"number\": 2,\n  //     \"question\": \"Of these three options, which is most important to you?\",\n  //     \"answers\": [\n  //       {\n  //         \"answer-id\": 1,\n  //         \"text\": \"Choosing my own path\"\n  //       },\n  //       {\n  //         \"answer-id\": 2,\n  //         \"text\": \"Putting others at ease\"\n  //       },\n  //       {\n  //         \"answer-id\": 3,\n  //         \"text\": \"Committing to a solid plan\"\n  //       }\n  //     ]\n  //   }\n  const [questionBank, setQuestionBank] = useState([]);\n  const [responseBank, setResponseBank] = useState(new Array(112).fill(null));\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  useEffect(() => {\n    fetch(\"/api/questions\").then(res => res.json()).then(data => {\n      setQuestionBank(data);\n    }).catch(console.log);\n  }, []);\n\n  function handleSetResponseBank(response, index) {\n    const newResponseBank = responseBank.slice();\n    newResponseBank[index] = response;\n    setResponseBank(newResponseBank);\n  }\n\n  return /*#__PURE__*/React.createElement(SurveyBox, {\n    questionBank: questionBank,\n    setQuestionBank: handleSetResponseBank,\n    responseBank: responseBank,\n    setResponseBank: setResponseBank,\n    currentQuestion: currentQuestion,\n    setCurrentQuestion: setCurrentQuestion,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  });\n}\n\nexport default Survey;","map":{"version":3,"sources":["/home/hunter/dev/leadhr/prototype/front-end/src/components/Survey/Survey.js"],"names":["React","useState","useEffect","SurveyBox","Survey","questionBank","setQuestionBank","responseBank","setResponseBank","Array","fill","currentQuestion","setCurrentQuestion","fetch","then","res","json","data","catch","console","log","handleSetResponseBank","response","index","newResponseBank","slice"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,wBAAtB;;AAEA,SAASC,MAAT,GAAkB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCL,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACM,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,IAAIQ,KAAJ,CAAU,GAAV,EAAeC,IAAf,CAAoB,IAApB,CAAD,CAAhD;AACA,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCX,QAAQ,CAAC,CAAD,CAAtD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,KAAK,CAAC,gBAAD,CAAL,CACGC,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESG,IAAD,IAAU;AACdX,MAAAA,eAAe,CAACW,IAAD,CAAf;AACD,KAJH,EAKGC,KALH,CAKSC,OAAO,CAACC,GALjB;AAMD,GAPQ,EAON,EAPM,CAAT;;AASA,WAASC,qBAAT,CAA+BC,QAA/B,EAAyCC,KAAzC,EAAgD;AAC5C,UAAMC,eAAe,GAAGjB,YAAY,CAACkB,KAAb,EAAxB;AACAD,IAAAA,eAAe,CAACD,KAAD,CAAf,GAAyBD,QAAzB;AACAd,IAAAA,eAAe,CAACgB,eAAD,CAAf;AAEH;;AAED,sBACE,oBAAC,SAAD;AACE,IAAA,YAAY,EAAEnB,YADhB;AAEE,IAAA,eAAe,EAAEgB,qBAFnB;AAGE,IAAA,YAAY,EAAEd,YAHhB;AAIE,IAAA,eAAe,EAAEC,eAJnB;AAKE,IAAA,eAAe,EAAEG,eALnB;AAME,IAAA,kBAAkB,EAAEC,kBANtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAUD;;AAED,eAAeR,MAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport SurveyBox from \"../SurveyBox/SurveyBox\";\n\nfunction Survey() {\n  //contains all survey information\n  //format: array with 56 elements\n  //example element\n  //   {\n  //     \"question-id\": 1,\n  //     \"number\": 2,\n  //     \"question\": \"Of these three options, which is most important to you?\",\n  //     \"answers\": [\n  //       {\n  //         \"answer-id\": 1,\n  //         \"text\": \"Choosing my own path\"\n  //       },\n  //       {\n  //         \"answer-id\": 2,\n  //         \"text\": \"Putting others at ease\"\n  //       },\n  //       {\n  //         \"answer-id\": 3,\n  //         \"text\": \"Committing to a solid plan\"\n  //       }\n  //     ]\n  //   }\n  const [questionBank, setQuestionBank] = useState([]);\n  const [responseBank, setResponseBank] = useState(new Array(112).fill(null));\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n\n  useEffect(() => {\n    fetch(\"/api/questions\")\n      .then((res) => res.json())\n      .then((data) => {\n        setQuestionBank(data);\n      })\n      .catch(console.log);\n  }, []);\n  \n  function handleSetResponseBank(response, index) {\n      const newResponseBank = responseBank.slice();\n      newResponseBank[index] = response;\n      setResponseBank(newResponseBank)\n\n  }\n\n  return (\n    <SurveyBox\n      questionBank={questionBank}\n      setQuestionBank={handleSetResponseBank}\n      responseBank={responseBank}\n      setResponseBank={setResponseBank}\n      currentQuestion={currentQuestion}\n      setCurrentQuestion={setCurrentQuestion}\n    />\n  );\n}\n\nexport default Survey;\n"]},"metadata":{},"sourceType":"module"}