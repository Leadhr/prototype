{"ast":null,"code":"var _jsxFileName = \"/home/hunter/dev/leadhr/prototype/front-end/src/components/Answer/Answer.js\";\nimport React, { useState } from \"react\";\n\nfunction Answer(props) {\n  function handleClick(e) {\n    e.preventDefault(); //on click, check what stage\n\n    if (props.currentStage === 0) {\n      //for stage zero we will update the response and increment the stage\n      props.setResponseBank(props.answer[\"answer-id\"], props.currentStage);\n      props.setCurrentStage(1); //then hide the element\n\n      props.handleShow(false);\n    } else {\n      //for stage one we will update the response and increment the current\n      //question, then set the stage to 0\n      props.setResponseBank(props.answer[\"answer-id\"], props.currentQuestion, props.currentStage); //check if we are done with the survey\n\n      if (props.currentQuestion === 55) {\n        //if we are done, set complete to true\n        props.setComplete(true);\n      }\n\n      props.setCurrentQuestion(props.currentQuestion + 1);\n      props.setCurrentStage(0);\n    }\n\n    console.log(props.answer[\"answer-id\"]);\n  }\n\n  if (show) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }\n    }, props.answer.text), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }\n    }));\n  } else {\n    return null;\n  }\n}\n\nexport default Answer;","map":{"version":3,"sources":["/home/hunter/dev/leadhr/prototype/front-end/src/components/Answer/Answer.js"],"names":["React","useState","Answer","props","handleClick","e","preventDefault","currentStage","setResponseBank","answer","setCurrentStage","handleShow","currentQuestion","setComplete","setCurrentQuestion","console","log","show","text"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AACrB,WAASC,WAAT,CAAqBC,CAArB,EAAwB;AACtBA,IAAAA,CAAC,CAACC,cAAF,GADsB,CAEtB;;AACA,QAAIH,KAAK,CAACI,YAAN,KAAuB,CAA3B,EAA8B;AAC5B;AACAJ,MAAAA,KAAK,CAACK,eAAN,CAAsBL,KAAK,CAACM,MAAN,CAAa,WAAb,CAAtB,EAAiDN,KAAK,CAACI,YAAvD;AACAJ,MAAAA,KAAK,CAACO,eAAN,CAAsB,CAAtB,EAH4B,CAI5B;;AACAP,MAAAA,KAAK,CAACQ,UAAN,CAAiB,KAAjB;AACD,KAND,MAMO;AACL;AACA;AACAR,MAAAA,KAAK,CAACK,eAAN,CACEL,KAAK,CAACM,MAAN,CAAa,WAAb,CADF,EAEEN,KAAK,CAACS,eAFR,EAGET,KAAK,CAACI,YAHR,EAHK,CAQL;;AACA,UAAIJ,KAAK,CAACS,eAAN,KAA0B,EAA9B,EAAkC;AAChC;AACAT,QAAAA,KAAK,CAACU,WAAN,CAAkB,IAAlB;AACD;;AACDV,MAAAA,KAAK,CAACW,kBAAN,CAAyBX,KAAK,CAACS,eAAN,GAAwB,CAAjD;AACAT,MAAAA,KAAK,CAACO,eAAN,CAAsB,CAAtB;AACD;;AACDK,IAAAA,OAAO,CAACC,GAAR,CAAYb,KAAK,CAACM,MAAN,CAAa,WAAb,CAAZ;AACD;;AACD,MAAIQ,IAAJ,EAAU;AACR,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAQ,MAAA,OAAO,EAAEb,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+BD,KAAK,CAACM,MAAN,CAAaS,IAA5C,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADJ;AAMD,GAPD,MAOO;AACH,WAAO,IAAP;AACH;AACF;;AAED,eAAehB,MAAf","sourcesContent":["import React, { useState } from \"react\";\n\nfunction Answer(props) {\n  function handleClick(e) {\n    e.preventDefault();\n    //on click, check what stage\n    if (props.currentStage === 0) {\n      //for stage zero we will update the response and increment the stage\n      props.setResponseBank(props.answer[\"answer-id\"], props.currentStage);\n      props.setCurrentStage(1);\n      //then hide the element\n      props.handleShow(false)\n    } else {\n      //for stage one we will update the response and increment the current\n      //question, then set the stage to 0\n      props.setResponseBank(\n        props.answer[\"answer-id\"],\n        props.currentQuestion,\n        props.currentStage\n      );\n      //check if we are done with the survey\n      if (props.currentQuestion === 55) {\n        //if we are done, set complete to true\n        props.setComplete(true);\n      }\n      props.setCurrentQuestion(props.currentQuestion + 1);\n      props.setCurrentStage(0);\n    }\n    console.log(props.answer[\"answer-id\"]);\n  }\n  if (show) {\n    return (\n        <div>\n          <button onClick={handleClick}>{props.answer.text}</button>\n          <br></br>\n        </div>\n      );\n  } else {\n      return null;\n  }\n}\n\nexport default Answer;\n"]},"metadata":{},"sourceType":"module"}