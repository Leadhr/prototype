{"ast":null,"code":"var _jsxFileName = \"/home/hunter/dev/leadhr/prototype/front-end/src/components/QuizApp/QuizApp.js\";\nimport React, { Component } from \"react\";\nimport \"../../assets/style.css\";\nimport quizService from \"./quizService\";\nimport QuestionBox from \"../QuestionBox/QuestionBox\";\nimport Result from \"../Result/Result\";\n\nclass QuizApp extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      questionBank: [],\n      score: 0,\n      responses: 0\n    };\n\n    this.getQuestions = () => {\n      // GET request using fetch inside useEffect React hook\n      fetch(\"/api/questions\").then(res => res.json()).then(data => {\n        this.setState({\n          questionBank: data\n        });\n      }).catch(console.log);\n    };\n\n    this.computeAnswer = (answer, correctAnswer) => {\n      if (answer === correctAnswer) {\n        this.setState({\n          score: this.state.score + 1\n        });\n      }\n\n      this.setState({\n        responses: this.state.responses < 5 ? this.state.responses + 1 : 5\n      });\n    };\n\n    this.playAgain = () => {\n      this.getQuestions();\n      this.setState({\n        score: 0,\n        responses: 0\n      });\n    };\n  }\n\n  //runs when component is rendered\n  componentDidMount() {\n    //initialize state with data\n    this.getQuestions();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }, \"Quiz App\"), this.state.questionBank.length > 0 && this.state.responses < 5 && // map through the array of question data\n    this.state.questionBank.map( // for each question, return an h4 element with \"question\" as the text\n    ({\n      question,\n      answers,\n      correct,\n      questionId\n    }) => /*#__PURE__*/React.createElement(QuestionBox, {\n      question: question,\n      options: answers,\n      key: questionId,\n      selected: answer => this.computeAnswer(answer, correct),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 15\n      }\n    })), this.state.responses === 5 ? /*#__PURE__*/React.createElement(Result, {\n      score: this.state.score,\n      playAgain: this.playAgain,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }\n    }) : null);\n  }\n\n}\n\nexport default QuizApp;","map":{"version":3,"sources":["/home/hunter/dev/leadhr/prototype/front-end/src/components/QuizApp/QuizApp.js"],"names":["React","Component","quizService","QuestionBox","Result","QuizApp","state","questionBank","score","responses","getQuestions","fetch","then","res","json","data","setState","catch","console","log","computeAnswer","answer","correctAnswer","playAgain","componentDidMount","render","length","map","question","answers","correct","questionId"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,wBAAP;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;;AAEA,MAAMC,OAAN,SAAsBJ,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAC9BK,KAD8B,GACtB;AACNC,MAAAA,YAAY,EAAE,EADR;AAENC,MAAAA,KAAK,EAAE,CAFD;AAGNC,MAAAA,SAAS,EAAE;AAHL,KADsB;;AAAA,SAO9BC,YAP8B,GAOf,MAAM;AACnB;AACAC,MAAAA,KAAK,CAAC,gBAAD,CAAL,CACCC,IADD,CACOC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADf,EAECF,IAFD,CAEOG,IAAD,IAAU;AACd,aAAKC,QAAL,CAAc;AAAET,UAAAA,YAAY,EAAEQ;AAAhB,SAAd;AACD,OAJD,EAKCE,KALD,CAKOC,OAAO,CAACC,GALf;AAMD,KAf6B;;AAAA,SAgB9BC,aAhB8B,GAgBd,CAACC,MAAD,EAASC,aAAT,KAA2B;AACzC,UAAID,MAAM,KAAKC,aAAf,EAA8B;AAC5B,aAAKN,QAAL,CAAc;AACZR,UAAAA,KAAK,EAAE,KAAKF,KAAL,CAAWE,KAAX,GAAmB;AADd,SAAd;AAGD;;AACD,WAAKQ,QAAL,CAAc;AACZP,QAAAA,SAAS,EAAE,KAAKH,KAAL,CAAWG,SAAX,GAAuB,CAAvB,GAA2B,KAAKH,KAAL,CAAWG,SAAX,GAAuB,CAAlD,GAAsD;AADrD,OAAd;AAGD,KAzB6B;;AAAA,SA0B9Bc,SA1B8B,GA0BlB,MAAM;AAChB,WAAKb,YAAL;AACA,WAAKM,QAAL,CAAc;AACZR,QAAAA,KAAK,EAAE,CADK;AAEZC,QAAAA,SAAS,EAAE;AAFC,OAAd;AAID,KAhC6B;AAAA;;AAiC9B;AACAe,EAAAA,iBAAiB,GAAG;AAClB;AACA,SAAKd,YAAL;AACD;;AACDe,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAGG,KAAKnB,KAAL,CAAWC,YAAX,CAAwBmB,MAAxB,GAAiC,CAAjC,IACC,KAAKpB,KAAL,CAAWG,SAAX,GAAuB,CADxB,IAEC;AACA,SAAKH,KAAL,CAAWC,YAAX,CAAwBoB,GAAxB,EACE;AACA,KAAC;AAAEC,MAAAA,QAAF;AAAYC,MAAAA,OAAZ;AAAqBC,MAAAA,OAArB;AAA8BC,MAAAA;AAA9B,KAAD,kBACE,oBAAC,WAAD;AACE,MAAA,QAAQ,EAAEH,QADZ;AAEE,MAAA,OAAO,EAAEC,OAFX;AAGE,MAAA,GAAG,EAAEE,UAHP;AAIE,MAAA,QAAQ,EAAGV,MAAD,IAAY,KAAKD,aAAL,CAAmBC,MAAnB,EAA2BS,OAA3B,CAJxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CANJ,EAiBG,KAAKxB,KAAL,CAAWG,SAAX,KAAyB,CAAzB,gBACC,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAE,KAAKH,KAAL,CAAWE,KAA1B;AAAiC,MAAA,SAAS,EAAE,KAAKe,SAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,GAEG,IAnBN,CADF;AAuBD;;AA9D6B;;AAiEhC,eAAelB,OAAf","sourcesContent":["import React, { Component } from \"react\";\nimport \"../../assets/style.css\";\nimport quizService from \"./quizService\";\nimport QuestionBox from \"../QuestionBox/QuestionBox\";\nimport Result from \"../Result/Result\";\n\nclass QuizApp extends Component {\n  state = {\n    questionBank: [],\n    score: 0,\n    responses: 0,\n  };\n  //function to fetch data from mock api\n  getQuestions = () => {\n    // GET request using fetch inside useEffect React hook\n    fetch(\"/api/questions\")\n    .then((res) => res.json())\n    .then((data) => {\n      this.setState({ questionBank: data });\n    })\n    .catch(console.log);\n  };\n  computeAnswer = (answer, correctAnswer) => {\n    if (answer === correctAnswer) {\n      this.setState({\n        score: this.state.score + 1,\n      });\n    }\n    this.setState({\n      responses: this.state.responses < 5 ? this.state.responses + 1 : 5,\n    });\n  };\n  playAgain = () => {\n    this.getQuestions();\n    this.setState({\n      score: 0,\n      responses: 0,\n    });\n  };\n  //runs when component is rendered\n  componentDidMount() {\n    //initialize state with data\n    this.getQuestions();\n  }\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"title\">Quiz App</div>\n        {/* if this.state.questionBank is not empty */}\n        {this.state.questionBank.length > 0 &&\n          this.state.responses < 5 &&\n          // map through the array of question data\n          this.state.questionBank.map(\n            // for each question, return an h4 element with \"question\" as the text\n            ({ question, answers, correct, questionId }) => (\n              <QuestionBox\n                question={question}\n                options={answers}\n                key={questionId}\n                selected={(answer) => this.computeAnswer(answer, correct)}\n              />\n            )\n          )}\n        {this.state.responses === 5 ? (\n          <Result score={this.state.score} playAgain={this.playAgain} />\n        ) : null}\n      </div>\n    );\n  }\n}\n\nexport default QuizApp;\n"]},"metadata":{},"sourceType":"module"}