{"ast":null,"code":"var _jsxFileName = \"/home/hunter/dev/leadhr/prototype/front-end/src/components/Answer/Answer.js\";\nimport React from \"react\";\n\nfunction Answer(props) {\n  function handleClick(e) {\n    e.preventDefault();\n    const id = props.answer[\"answer-id\"]; //on click, check what stage\n\n    if (props.currentStage === 0) {\n      //for stage zero we will update the response and increment the stage\n      props.setResponseBank();\n      props.setCurrentStage(1);\n    } else {\n      //for stage one we will update the response \n      return null;\n    }\n\n    console.log(props.answer[\"answer-id\"]);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, props.answer.text), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default Answer;","map":{"version":3,"sources":["/home/hunter/dev/leadhr/prototype/front-end/src/components/Answer/Answer.js"],"names":["React","Answer","props","handleClick","e","preventDefault","id","answer","currentStage","setResponseBank","setCurrentStage","console","log","text"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AACrB,WAASC,WAAT,CAAqBC,CAArB,EAAwB;AACtBA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,EAAE,GAAGJ,KAAK,CAACK,MAAN,CAAa,WAAb,CAAX,CAFsB,CAGtB;;AACA,QAAIL,KAAK,CAACM,YAAN,KAAuB,CAA3B,EAA8B;AAC1B;AACAN,MAAAA,KAAK,CAACO,eAAN;AACAP,MAAAA,KAAK,CAACQ,eAAN,CAAsB,CAAtB;AACH,KAJD,MAIO;AACH;AACA,aAAO,IAAP;AACH;;AACDC,IAAAA,OAAO,CAACC,GAAR,CAAYV,KAAK,CAACK,MAAN,CAAa,WAAb,CAAZ;AACD;;AACD,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,OAAO,EAAEJ,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+BD,KAAK,CAACK,MAAN,CAAaM,IAA5C,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD;;AAED,eAAeZ,MAAf","sourcesContent":["import React from \"react\";\n\nfunction Answer(props) {\n  function handleClick(e) {\n    e.preventDefault();\n    const id = props.answer[\"answer-id\"]\n    //on click, check what stage\n    if (props.currentStage === 0) {\n        //for stage zero we will update the response and increment the stage\n        props.setResponseBank()\n        props.setCurrentStage(1)\n    } else {\n        //for stage one we will update the response \n        return null\n    }\n    console.log(props.answer[\"answer-id\"]);\n  }\n  return (\n    <div>\n      <button onClick={handleClick}>{props.answer.text}</button>\n      <br></br>\n    </div>\n  );\n}\n\nexport default Answer;\n"]},"metadata":{},"sourceType":"module"}